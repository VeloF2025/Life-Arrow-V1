rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can access their own profile, super-admins can access all
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/adminProfiles/$(request.auth.uid));
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/adminProfiles/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/adminProfiles/$(request.auth.uid)).data.role == 'super-admin';
    }
    
    // Clients collection - temporarily allow all authenticated users for testing
    match /clients/{clientId} {
      allow read, write: if request.auth != null;
    }
    
    // Services collection - allow all authenticated users for admin management
    match /services/{serviceId} {
      allow read, write: if request.auth != null;
    }
    
    // Treatment centres collection - allow all authenticated users for admin management
    match /centres/{centreId} {
      allow read, write: if request.auth != null;
    }
    
    // Staff collection - allow all authenticated users for admin management
    match /staff/{staffId} {
      allow read, write: if request.auth != null;
    }
    
    // Client profiles - only the user and their admin can access
    match /clientProfiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        resource.data.adminId == request.auth.uid;
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/adminProfiles/$(request.auth.uid));
    }
    
    // Admin profiles - temporarily allow all authenticated users to read/write for setup
    match /adminProfiles/{userId} {
      allow read, write: if request.auth != null;
    }
    
    // Appointments - accessible by both client and admin
    match /appointments/{appointmentId} {
      allow read, write: if request.auth != null && 
        (resource.data.clientId == request.auth.uid || 
         resource.data.adminId == request.auth.uid);
      allow create: if request.auth != null &&
        (request.resource.data.clientId == request.auth.uid ||
         request.resource.data.adminId == request.auth.uid);
    }
    
    // Progress entries - accessible by client and their admin
    match /progressEntries/{entryId} {
      allow read, write: if request.auth != null &&
        resource.data.clientId == request.auth.uid;
      allow read: if request.auth != null &&
        get(/databases/$(database)/documents/clientProfiles/$(resource.data.clientId)).data.adminId == request.auth.uid;
    }
    
    // Health metrics - accessible by client and their admin
    match /healthMetrics/{metricId} {
      allow read, write: if request.auth != null &&
        resource.data.clientId == request.auth.uid;
      allow read: if request.auth != null &&
        get(/databases/$(database)/documents/clientProfiles/$(resource.data.clientId)).data.adminId == request.auth.uid;
    }
    
    // Goals - accessible by client and their admin
    match /goals/{goalId} {
      allow read, write: if request.auth != null &&
        resource.data.clientId == request.auth.uid;
      allow read: if request.auth != null &&
        get(/databases/$(database)/documents/clientProfiles/$(resource.data.clientId)).data.adminId == request.auth.uid;
    }
  }
} 